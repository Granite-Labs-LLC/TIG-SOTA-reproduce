#!/usr/bin/env bash
# Run TIG vector-search algorithms in Docker with various configurations
set -euo pipefail

# Logging function with timestamps
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $*" | tee -a benchmark.log
}

log_error() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: $*" | tee -a benchmark.log >&2
}

CHALLENGE=vector_search
VERSION=0.0.1
FUEL_BUDGET=5000000000000
NONCES=10  # Reduced for faster testing

# Define algorithms to benchmark
if [ $# -eq 0 ]; then
    # Default: benchmark all algorithms
    ALGORITHMS=(improved_search stat_filter)
else
    # Use provided algorithm(s)
    ALGORITHMS=("$@")
fi

log "Starting TIG vector-search benchmarking"
log "Algorithms: ${ALGORITHMS[@]}"
log "Challenge: $CHALLENGE"
log "Version: $VERSION"

# Create results directory
log "Creating results directory..."
# Clean up old results
RESULTS_DIR="results_07_15_default_fuel"
rm -rf $RESULTS_DIR/*
mkdir -p $RESULTS_DIR
if [ $? -eq 0 ]; then
    log "✓ Results directory created successfully"
else
    log_error "Failed to create results directory"
    exit 1
fi

# Check if Docker is available
log "Checking Docker availability..."
if ! command -v docker &> /dev/null; then
    log_error "Docker command not found. Please install Docker."
    exit 1
fi

# Check if Docker daemon is running
if ! docker info &> /dev/null; then
    log_error "Docker daemon is not running. Please start Docker."
    exit 1
fi
log "✓ Docker is available and running"

# Check GPU support
log "Checking GPU support..."
if command -v nvidia-smi &> /dev/null; then
    log "✓ nvidia-smi found"
    nvidia-smi --query-gpu=name --format=csv,noheader 2>/dev/null | while read gpu; do
        log "  GPU: $gpu"
    done
else
    log "⚠ nvidia-smi not found - GPU support may not be available"
fi

# Test Docker image accessibility
log "Testing Docker image accessibility..."
if docker pull ghcr.io/tig-foundation/tig-monorepo/$CHALLENGE/dev:$VERSION &> /dev/null; then
    log "✓ Docker image pulled successfully"
else
    log_error "Failed to pull Docker image. Continuing with existing image..."
fi

# Define test configurations
WORKERS=(1 4 8)  # Test with 1 and 4 workers like Charles' example

# Test with a few key difficulties that Charles used
DIFFICULTIES=('[200,50]' '[204,51]' '[208,52]' '[212,53]' '[216,54]' '[220,55]' '[224,56]' '[228,57]' '[232,58]' '[236,59]' '[240,60]' '[244,61]' '[248,62]' '[252,63]' '[256,64]' '[260,65]' '[264,66]' '[268,67]' '[272,68]' '[276,69]' '[280,70]' '[284,71]' '[288,72]' '[292,73]' '[296,74]' '[300,75]' '[304,76]' '[308,77]' '[312,78]' '[316,79]' '[320,80]' '[324,81]' '[328,82]' '[332,83]' '[336,84]' '[340,85]' '[344,86]' '[348,87]' '[352,88]' '[356,89]' '[360,90]' '[364,91]' '[368,92]' '[372,93]' '[376,94]' '[380,95]' '[384,96]' '[388,97]' '[392,98]' '[396,99]' '[400,100]' '[404,101]' '[408,102]' '[412,103]' '[416,104]' '[420,105]' '[424,106]' '[428,107]' '[432,108]' '[436,109]' '[440,110]' '[444,111]' '[448,112]' '[452,113]' '[456,114]' '[460,115]' '[464,116]' '[468,117]' '[472,118]' '[476,119]' '[480,120]' '[484,121]' '[488,122]' '[492,123]' '[496,124]' '[500,125]' '[504,126]' '[508,127]' '[512,128]' '[516,129]' '[520,130]' '[524,131]' '[528,132]' '[532,133]' '[536,134]' '[540,135]' '[544,136]' '[548,137]' '[552,138]' '[556,139]' '[560,140]' '[564,141]' '[568,142]' '[572,143]' '[576,144]' '[580,145]' '[584,146]' '[588,147]' '[592,148]' '[596,149]' '[600,150]' '[604,151]' '[608,152]' '[612,153]' '[616,154]' '[620,155]' '[624,156]' '[628,157]' '[632,158]' '[636,159]' '[640,160]' '[644,161]' '[648,162]' '[652,163]' '[656,164]' '[660,165]' '[664,166]' '[668,167]' '[672,168]' '[676,169]' '[680,170]' '[684,171]' '[688,172]' '[692,173]' '[696,174]' '[700,175]' '[704,176]' '[708,177]' '[712,178]' '[716,179]' '[720,180]' '[724,181]' '[728,182]' '[732,183]' '[736,184]' '[740,185]' '[744,186]' '[748,187]' '[752,188]' '[756,189]' '[760,190]' '[764,191]' '[768,192]' '[772,193]' '[776,194]' '[780,195]' '[784,196]' '[788,197]' '[792,198]' '[796,199]' '[800,200]' '[804,201]' '[808,202]' '[812,203]' '[816,204]' '[820,205]' '[824,206]' '[828,207]' '[832,208]' '[836,209]' '[840,210]' '[844,211]' '[848,212]' '[852,213]' '[856,214]' '[860,215]' '[864,216]' '[868,217]' '[872,218]' '[876,219]' '[880,220]' '[884,221]' '[888,222]' '[892,223]' '[896,224]' '[900,225]' '[904,226]' '[908,227]' '[912,228]' '[916,229]' '[920,230]' '[924,231]' '[928,232]' '[932,233]' '[936,234]' '[940,235]' '[944,236]' '[948,237]' '[952,238]' '[956,239]' '[960,240]' '[964,241]' '[968,242]' '[972,243]' '[976,244]' '[980,245]' '[984,246]' '[988,247]' '[992,248]' '[996,249]' '[1000,250]' '[1004,251]' '[1008,252]' '[1012,253]' '[1016,254]' '[1020,255]' '[1024,256]' '[1028,257]' '[1032,258]' '[1036,259]' '[1040,260]' '[1044,261]' '[1048,262]' '[1052,263]' '[1056,264]' '[1060,265]' '[1064,266]' '[1068,267]' '[1072,268]' '[1076,269]' '[1080,270]' '[1084,271]' '[1088,272]' '[1092,273]' '[1096,274]' '[1100,275]' '[1104,276]' '[1108,277]' '[1112,278]' '[1116,279]' '[1120,280]' '[1124,281]' '[1128,282]' '[1132,283]' '[1136,284]' '[1140,285]' '[1144,286]' '[1148,287]' '[1152,288]' '[1156,289]' '[1160,290]' '[1164,291]' '[1168,292]' '[1172,293]' '[1176,294]' '[1180,295]' '[1184,296]' '[1188,297]' '[1192,298]' '[1196,299]' '[1200,300]' '[1204,301]' '[1208,302]' '[1212,303]' '[1216,304]' '[1220,305]' '[1224,306]' '[1228,307]' '[1232,308]' '[1236,309]' '[1240,310]' '[1244,311]' '[1248,312]' '[1252,313]' '[1256,314]' '[1260,315]' '[1264,316]' '[1268,317]' '[1272,318]' '[1276,319]' '[1280,320]' '[1284,321]' '[1288,322]' '[1292,323]' '[1296,324]' '[1300,325]' '[1304,326]' '[1308,327]' '[1312,328]' '[1316,329]' '[1320,330]' '[1324,331]' '[1328,332]' '[1332,333]' '[1336,334]' '[1340,335]' '[1344,336]' '[1348,337]' '[1352,338]' '[1356,339]' '[1360,340]' '[1364,341]' '[1368,342]' '[1372,343]' '[1376,344]' '[1380,345]' '[1384,346]' '[1388,347]' '[1392,348]' '[1396,349]' '[1400,350]' '[1404,351]' '[1408,352]' '[1412,353]' '[1416,354]' '[1420,355]' '[1424,356]' '[1428,357]' '[1432,358]' '[1436,359]' '[1440,360]' '[1444,361]' '[1448,362]' '[1452,363]' '[1456,364]' '[1460,365]' '[1464,366]' '[1468,367]' '[1472,368]' '[1476,369]' '[1480,370]' '[1484,371]' '[1488,372]' '[1492,373]' '[1496,374]' '[1500,375]' '[1504,376]' '[1508,377]' '[1512,378]' '[1516,379]' '[1520,380]' '[1524,381]' '[1528,382]' '[1532,383]' '[1536,384]' '[1540,385]' '[1544,386]' '[1548,387]' '[1552,388]' '[1556,389]' '[1560,390]' '[1564,391]' '[1568,392]' '[1572,393]' '[1576,394]' '[1580,395]' '[1584,396]' '[1588,397]' '[1592,398]' '[1596,399]' '[1600,400]' '[1604,401]' '[1608,402]' '[1612,403]' '[1616,404]' '[1620,405]' '[1624,406]' '[1628,407]' '[1632,408]' '[1636,409]' '[1640,410]' '[1644,411]' '[1648,412]' '[1652,413]' '[1656,414]' '[1600,400]' '[1604,401]' '[1608,402]' '[1612,403]' '[1616,404]' '[1620,405]' '[1624,406]' '[1628,407]' '[1632,408]' '[1636,409]' '[1640,410]' '[1644,411]' '[1648,412]' '[1652,413]' '[1656,414]' '[1660,415]' '[1664,416]' '[1668,417]' '[1672,418]' '[1676,419]' '[1680,420]' '[1684,421]' '[1688,422]' '[1692,423]' '[1696,424]' '[1700,425]' '[1704,426]' '[1708,427]' '[1712,428]' '[1716,429]' '[1720,430]' '[1724,431]' '[1728,432]' '[1732,433]' '[1736,434]' '[1740,435]' '[1744,436]' '[1748,437]' '[1752,438]' '[1756,439]' '[1760,440]' '[1764,441]' '[1768,442]' '[1772,443]' '[1776,444]' '[1780,445]' '[1784,446]' '[1788,447]' '[1792,448]' '[1796,449]' '[1800,450]' '[1804,451]' '[1808,452]' '[1812,453]' '[1816,454]' '[1820,455]' '[1824,456]' '[1828,457]' '[1832,458]' '[1836,459]' '[1840,460]' '[1844,461]' '[1848,462]' '[1852,463]' '[1856,464]' '[1860,465]' '[1864,466]' '[1868,467]' '[1872,468]' '[1876,469]' '[1880,470]' '[1884,471]' '[1888,472]' '[1892,473]' '[1896,474]' '[1900,475]' '[1904,476]' '[1908,477]' '[1912,478]' '[1916,479]' '[1920,480]' '[1924,481]' '[1928,482]' '[1932,483]' '[1936,484]' '[1940,485]' '[1944,486]' '[1948,487]' '[1952,488]' '[1956,489]' '[1960,490]' '[1964,491]' '[1968,492]' '[1972,493]' '[1976,494]' '[1980,495]' '[1984,496]' '[1988,497]' '[1992,498]' '[1996,499]' '[2000,500]' '[2000,500]' '[2004,501]' '[2008,502]' '[2012,503]' '[2016,504]' '[2020,505]' '[2024,506]' '[2028,507]' '[2032,508]' '[2036,509]' '[2040,510]' '[2044,511]' '[2048,512]' '[2052,513]' '[2056,514]' '[2060,515]' '[2064,516]' '[2068,517]' '[2072,518]' '[2076,519]' '[2080,520]' '[2084,521]' '[2088,522]' '[2092,523]' '[2096,524]' '[2100,525]' '[2104,526]' '[2108,527]' '[2112,528]' '[2116,529]' '[2120,530]' '[2124,531]' '[2128,532]' '[2132,533]' '[2136,534]' '[2140,535]' '[2144,536]' '[2148,537]' '[2152,538]' '[2156,539]' '[2160,540]' '[2164,541]' '[2168,542]' '[2172,543]' '[2176,544]' '[2180,545]' '[2184,546]' '[2188,547]' '[2192,548]' '[2196,549]' '[2200,550]' '[2204,551]' '[2208,552]' '[2212,553]' '[2216,554]' '[2220,555]' '[2224,556]' '[2228,557]' '[2232,558]' '[2236,559]' '[2240,560]' '[2244,561]' '[2248,562]' '[2252,563]' '[2256,564]' '[2260,565]' '[2264,566]' '[2268,567]' '[2272,568]' '[2276,569]' '[2280,570]' '[2284,571]' '[2288,572]' '[2292,573]' '[2296,574]' '[2300,575]' '[2304,576]' '[2308,577]' '[2312,578]' '[2316,579]' '[2320,580]' '[2324,581]' '[2328,582]' '[2332,583]' '[2336,584]' '[2340,585]' '[2344,586]' '[2348,587]' '[2352,588]' '[2356,589]' '[2360,590]' '[2364,591]' '[2368,592]' '[2372,593]' '[2376,594]' '[2380,595]' '[2384,596]' '[2388,597]' '[2392,598]' '[2396,599]' '[2400,600]' '[2404,601]' '[2408,602]' '[2412,603]' '[2416,604]' '[2420,605]' '[2424,606]' '[2428,607]' '[2432,608]' '[2436,609]' '[2440,610]' '[2444,611]' '[2448,612]' '[2452,613]' '[2456,614]' '[2460,615]' '[2464,616]' '[2468,617]' '[2472,618]' '[2476,619]' '[2480,620]' '[2484,621]' '[2488,622]' '[2492,623]' '[2496,624]' '[2500,625]')
# DIFFICULTIES=('[200,50]' '[204,51]' '[208,52]' '[212,53]' '[216,54]' '[220,55]' '[224,56]' '[228,57]' '[232,58]' '[236,59]' '[240,60]' '[244,61]' '[248,62]' '[252,63]' '[256,64]' '[260,65]' '[264,66]' '[268,67]' '[272,68]' '[276,69]' '[280,70]' '[284,71]' '[288,72]' '[292,73]' '[296,74]' '[300,75]' '[304,76]' '[308,77]' '[312,78]' '[316,79]' '[320,80]' '[324,81]' '[328,82]' '[332,83]' '[336,84]' '[340,85]' '[344,86]' '[348,87]' '[352,88]' '[356,89]' '[360,90]' '[364,91]' '[368,92]' '[372,93]' '[376,94]' '[380,95]' '[384,96]' '[388,97]' '[392,98]' '[396,99]' '[400,100]' '[404,101]' '[408,102]' '[412,103]' '[416,104]' '[420,105]' '[424,106]' '[428,107]' '[432,108]' '[436,109]' '[440,110]' '[444,111]' '[448,112]' '[452,113]' '[456,114]' '[460,115]' '[464,116]' '[468,117]' '[472,118]' '[476,119]' '[480,120]' '[484,121]' '[488,122]' '[492,123]' '[496,124]' '[500,125]' '[504,126]' '[508,127]' '[512,128]' '[516,129]' '[520,130]' '[524,131]' '[528,132]' '[532,133]' '[536,134]' '[540,135]' '[544,136]' '[548,137]' '[552,138]' '[556,139]' '[560,140]' '[564,141]' '[568,142]' '[572,143]' '[576,144]' '[580,145]' '[584,146]' '[588,147]' '[592,148]' '[596,149]' '[600,150]' '[604,151]' '[608,152]' '[612,153]' '[616,154]' '[620,155]' '[624,156]' '[628,157]' '[632,158]' '[636,159]' '[640,160]' '[644,161]' '[648,162]' '[652,163]' '[656,164]' '[660,165]' '[664,166]' '[668,167]' '[672,168]' '[676,169]' '[680,170]' '[684,171]' '[688,172]' '[692,173]' '[696,174]' '[700,175]' '[704,176]' '[708,177]' '[712,178]' '[716,179]' '[720,180]' '[724,181]' '[728,182]' '[732,183]' '[736,184]' '[740,185]' '[744,186]' '[748,187]' '[752,188]' '[756,189]' '[760,190]' '[764,191]' '[768,192]' '[772,193]' '[776,194]' '[780,195]' '[784,196]' '[788,197]' '[792,198]' '[796,199]' '[800,200]' '[804,201]' '[808,202]' '[812,203]' '[816,204]' '[820,205]' '[824,206]' '[828,207]' '[832,208]' '[836,209]' '[840,210]' '[844,211]' '[848,212]' '[852,213]' '[856,214]' '[860,215]' '[864,216]' '[868,217]' '[872,218]' '[876,219]' '[880,220]' '[884,221]' '[888,222]' '[892,223]' '[896,224]' '[900,225]' '[904,226]' '[908,227]' '[912,228]' '[916,229]' '[920,230]' '[924,231]' '[928,232]' '[932,233]' '[936,234]' '[940,235]' '[944,236]' '[948,237]' '[952,238]' '[956,239]' '[960,240]' '[964,241]' '[968,242]' '[972,243]' '[976,244]' '[980,245]' '[984,246]' '[988,247]' '[992,248]' '[996,249]' '[1000,250]' '[1004,251]' '[1008,252]' '[1012,253]' '[1016,254]' '[1020,255]' '[1024,256]' '[1028,257]' '[1032,258]' '[1036,259]' '[1040,260]' '[1044,261]' '[1048,262]' '[1052,263]' '[1056,264]' '[1060,265]' '[1064,266]' '[1068,267]' '[1072,268]' '[1076,269]' '[1080,270]' '[1084,271]' '[1088,272]' '[1092,273]' '[1096,274]' '[1100,275]' '[1104,276]' '[1108,277]' '[1112,278]' '[1116,279]' '[1120,280]' '[1124,281]' '[1128,282]' '[1132,283]' '[1136,284]' '[1140,285]' '[1144,286]' '[1148,287]' '[1152,288]' '[1156,289]' '[1160,290]' '[1164,291]' '[1168,292]' '[1172,293]' '[1176,294]' '[1180,295]' '[1184,296]' '[1188,297]' '[1192,298]' '[1196,299]' '[1200,300]' '[1204,301]' '[1208,302]' '[1212,303]' '[1216,304]' '[1220,305]' '[1224,306]' '[1228,307]' '[1232,308]' '[1236,309]' '[1240,310]' '[1244,311]' '[1248,312]' '[1252,313]' '[1256,314]' '[1260,315]' '[1264,316]' '[1268,317]' '[1272,318]' '[1276,319]' '[1280,320]' '[1284,321]' '[1288,322]' '[1292,323]' '[1296,324]' '[1300,325]' '[1304,326]' '[1308,327]' '[1312,328]' '[1316,329]' '[1320,330]' '[1324,331]' '[1328,332]' '[1332,333]' '[1336,334]' '[1340,335]' '[1344,336]' '[1348,337]' '[1352,338]' '[1356,339]' '[1360,340]' '[1364,341]' '[1368,342]' '[1372,343]' '[1376,344]' '[1380,345]' '[1384,346]' '[1388,347]' '[1392,348]' '[1396,349]' '[1400,350]' '[1404,351]' '[1408,352]' '[1412,353]' '[1416,354]' '[1420,355]' '[1424,356]' '[1428,357]' '[1432,358]' '[1436,359]' '[1440,360]' '[1444,361]' '[1448,362]' '[1452,363]' '[1456,364]' '[1460,365]' '[1464,366]' '[1468,367]' '[1472,368]' '[1476,369]' '[1480,370]' '[1484,371]' '[1488,372]' '[1492,373]' '[1496,374]' '[1500,375]' '[1504,376]' '[1508,377]' '[1512,378]' '[1516,379]' '[1520,380]' '[1524,381]' '[1528,382]' '[1532,383]' '[1536,384]' '[1540,385]' '[1544,386]' '[1548,387]' '[1552,388]' '[1556,389]' '[1560,390]' '[1564,391]' '[1568,392]' '[1572,393]' '[1576,394]' '[1580,395]' '[1584,396]' '[1588,397]' '[1592,398]' '[1596,399]' '[1600,400]' '[1604,401]' '[1608,402]' '[1612,403]' '[1616,404]' '[1620,405]' '[1624,406]' '[1628,407]' '[1632,408]' '[1636,409]' '[1640,410]' '[1644,411]' '[1648,412]' '[1652,413]' '[1656,414]' '[1600,400]' '[1604,401]' '[1608,402]' '[1612,403]' '[1616,404]' '[1620,405]' '[1624,406]' '[1628,407]' '[1632,408]' '[1636,409]' '[1640,410]' '[1644,411]' '[1648,412]' '[1652,413]' '[1656,414]' '[1660,415]' '[1664,416]' '[1668,417]' '[1672,418]' '[1676,419]' '[1680,420]' '[1684,421]' '[1688,422]' '[1692,423]' '[1696,424]' '[1700,425]' '[1704,426]' '[1708,427]' '[1712,428]' '[1716,429]' '[1720,430]' '[1724,431]' '[1728,432]' '[1732,433]' '[1736,434]' '[1740,435]' '[1744,436]' '[1748,437]' '[1752,438]' '[1756,439]' '[1760,440]' '[1764,441]' '[1768,442]' '[1772,443]' '[1776,444]' '[1780,445]' '[1784,446]' '[1788,447]' '[1792,448]' '[1796,449]' '[1800,450]' '[1804,451]' '[1808,452]' '[1812,453]' '[1816,454]' '[1820,455]' '[1824,456]' '[1828,457]' '[1832,458]' '[1836,459]' '[1840,460]' '[1844,461]' '[1848,462]' '[1852,463]' '[1856,464]' '[1860,465]' '[1864,466]' '[1868,467]' '[1872,468]' '[1876,469]' '[1880,470]' '[1884,471]' '[1888,472]' '[1892,473]' '[1896,474]' '[1900,475]' '[1904,476]' '[1908,477]' '[1912,478]' '[1916,479]' '[1920,480]' '[1924,481]' '[1928,482]' '[1932,483]' '[1936,484]' '[1940,485]' '[1944,486]' '[1948,487]' '[1952,488]' '[1956,489]' '[1960,490]' '[1964,491]' '[1968,492]' '[1972,493]' '[1976,494]' '[1980,495]' '[1984,496]' '[1988,497]' '[1992,498]' '[1996,499]' '[2000,500]' '[2000,500]' '[2004,501]' '[2008,502]' '[2012,503]' '[2016,504]' '[2020,505]' '[2024,506]' '[2028,507]' '[2032,508]' '[2036,509]' '[2040,510]' '[2044,511]' '[2048,512]' '[2052,513]' '[2056,514]' '[2060,515]' '[2064,516]' '[2068,517]' '[2072,518]' '[2076,519]' '[2080,520]' '[2084,521]' '[2088,522]' '[2092,523]' '[2096,524]' '[2100,525]' '[2104,526]' '[2108,527]' '[2112,528]' '[2116,529]' '[2120,530]' '[2124,531]' '[2128,532]' '[2132,533]' '[2136,534]' '[2140,535]' '[2144,536]' '[2148,537]' '[2152,538]' '[2156,539]' '[2160,540]' '[2164,541]' '[2168,542]' '[2172,543]' '[2176,544]' '[2180,545]' '[2184,546]' '[2188,547]' '[2192,548]' '[2196,549]' '[2200,550]' '[2204,551]' '[2208,552]' '[2212,553]' '[2216,554]' '[2220,555]' '[2224,556]' '[2228,557]' '[2232,558]' '[2236,559]' '[2240,560]' '[2244,561]' '[2248,562]' '[2252,563]' '[2256,564]' '[2260,565]' '[2264,566]' '[2268,567]' '[2272,568]' '[2276,569]' '[2280,570]' '[2284,571]' '[2288,572]' '[2292,573]' '[2296,574]' '[2300,575]' '[2304,576]' '[2308,577]' '[2312,578]' '[2316,579]' '[2320,580]' '[2324,581]' '[2328,582]' '[2332,583]' '[2336,584]' '[2340,585]' '[2344,586]' '[2348,587]' '[2352,588]' '[2356,589]' '[2360,590]' '[2364,591]' '[2368,592]' '[2372,593]' '[2376,594]' '[2380,595]' '[2384,596]' '[2388,597]' '[2392,598]' '[2396,599]' '[2400,600]' '[2404,601]' '[2408,602]' '[2412,603]' '[2416,604]' '[2420,605]' '[2424,606]' '[2428,607]' '[2432,608]' '[2436,609]' '[2440,610]' '[2444,611]' '[2448,612]' '[2452,613]' '[2456,614]' '[2460,615]' '[2464,616]' '[2468,617]' '[2472,618]' '[2476,619]' '[2480,620]' '[2484,621]' '[2488,622]' '[2492,623]' '[2496,624]' '[2500,625]' '[2504,626]' '[2508,627]' '[2512,628]' '[2516,629]' '[2520,630]' '[2524,631]' '[2528,632]' '[2532,633]' '[2536,634]' '[2540,635]' '[2544,636]' '[2548,637]' '[2552,638]' '[2556,639]' '[2560,640]' '[2564,641]' '[2568,642]' '[2572,643]' '[2576,644]' '[2580,645]' '[2584,646]' '[2588,647]' '[2592,648]' '[2596,649]' '[2600,650]' '[2604,651]' '[2608,652]' '[2612,653]' '[2616,654]' '[2620,655]' '[2624,656]' '[2628,657]' '[2632,658]' '[2636,659]' '[2640,660]' '[2644,661]' '[2648,662]' '[2652,663]' '[2656,664]' '[2660,665]' '[2664,666]' '[2668,667]' '[2672,668]' '[2676,669]' '[2680,670]' '[2684,671]' '[2688,672]' '[2692,673]' '[2696,674]' '[2700,675]' '[2704,676]' '[2708,677]' '[2712,678]' '[2716,679]' '[2720,680]' '[2724,681]' '[2728,682]' '[2732,683]' '[2736,684]' '[2740,685]' '[2744,686]' '[2748,687]' '[2752,688]' '[2756,689]' '[2760,690]' '[2764,691]' '[2768,692]' '[2772,693]' '[2776,694]' '[2780,695]' '[2784,696]' '[2788,697]' '[2792,698]' '[2796,699]' '[2800,700]' '[2804,701]' '[2808,702]' '[2812,703]' '[2816,704]' '[2820,705]' '[2824,706]' '[2828,707]' '[2832,708]' '[2836,709]' '[2840,710]' '[2844,711]' '[2848,712]' '[2852,713]' '[2856,714]' '[2860,715]' '[2864,716]' '[2868,717]' '[2872,718]' '[2876,719]' '[2880,720]' '[2884,721]' '[2888,722]' '[2892,723]' '[2896,724]' '[2900,725]' '[2904,726]' '[2908,727]' '[2912,728]' '[2916,729]' '[2920,730]' '[2924,731]' '[2928,732]' '[2932,733]' '[2936,734]' '[2940,735]' '[2944,736]' '[2948,737]' '[2952,738]' '[2956,739]' '[2960,740]' '[2964,741]' '[2968,742]' '[2972,743]' '[2976,744]' '[2980,745]' '[2984,746]' '[2988,747]' '[2992,748]' '[2996,749]' '[3000,750]')
# DIFFICULTIES=('[2000,500]' '[200,50]' '[204,51]')

log "Test configurations:"
log "  Workers: ${WORKERS[@]}"
log "  Difficulties: ${DIFFICULTIES[@]}"

# Initialize counters
total_tests=$((${#ALGORITHMS[@]} * ${#WORKERS[@]} * ${#DIFFICULTIES[@]}))
current_test=0
successful_tests=0
failed_tests=0

log "Total tests to run: $total_tests"

# Run tests for each combination
for ALGORITHM in "${ALGORITHMS[@]}"; do
    log "--- Starting benchmarks for algorithm: $ALGORITHM ---"
    
    for WORKERS_COUNT in "${WORKERS[@]}"; do
        for DIFFICULTY in "${DIFFICULTIES[@]}"; do
        current_test=$((current_test + 1))
        log "=== Test $current_test/$total_tests ==="
        
        # Clean difficulty string for filename (remove brackets, replace comma with underscore)
        DIFF_CLEAN=$(echo "$DIFFICULTY" | tr -d '[]' | tr ',' '_')
        
        LOG_FILE="${RESULTS_DIR}/${ALGORITHM}_w${WORKERS_COUNT}_d${DIFF_CLEAN}.log"
        
        log "Configuration: Workers=$WORKERS_COUNT, Difficulty=$DIFFICULTY"
        log "Output file: $LOG_FILE"
        
        # Build Docker command - match Charles' working example exactly
        docker_cmd="docker run --rm --gpus all -v $(pwd):/app ghcr.io/tig-foundation/tig-monorepo/$CHALLENGE/dev:$VERSION"
        # test_cmd="cd /app/tig-monorepo && CHALLENGE=$CHALLENGE scripts/test_algorithm $ALGORITHM \"$DIFFICULTY\" --workers $WORKERS_COUNT --nonces $NONCES --fuel $FUEL_BUDGET --verbose"
        test_cmd="cd /app/tig-monorepo && CHALLENGE=$CHALLENGE scripts/test_algorithm $ALGORITHM \"$DIFFICULTY\" --workers $WORKERS_COUNT --nonces $NONCES --verbose"
        
        log "Docker command: $docker_cmd"
        log "Test command: $test_cmd"
        
        # Run the test and capture exit code
        log "Starting test execution..."
        start_time=$(date +%s)
        
        # Run with tee to show output and save to file
        if $docker_cmd bash -c "$test_cmd" 2>&1 | tee "$LOG_FILE"; then
            end_time=$(date +%s)
            duration=$((end_time - start_time))
            successful_tests=$((successful_tests + 1))
            log "✓ Test completed successfully in ${duration}s"
            log "  Output saved to: $LOG_FILE"
            
            # Check if log file has timing data
            if grep -q "Time for nonce:" "$LOG_FILE"; then
                log "  ✓ Log file contains timing data"
                timing_count=$(grep -c "Time for nonce:" "$LOG_FILE")
                log "  Found $timing_count timing entries"
            else
                log "  ⚠ Log file may be missing timing data"
            fi
            
            # Check if log file has expected content
            if grep -q "#processing: 0" "$LOG_FILE"; then
                log "  ✓ Log file contains completion marker"
            else
                log "  ⚠ Log file may be incomplete (no completion marker found)"
            fi
            
            # Show file size
            if [ -f "$LOG_FILE" ]; then
                file_size=$(wc -c < "$LOG_FILE")
                log "  Log file size: $file_size bytes"
            fi
        else
            end_time=$(date +%s)
            duration=$((end_time - start_time))
            failed_tests=$((failed_tests + 1))
            log_error "Test failed after ${duration}s"
            log_error "  Docker exit code: $?"
            log_error "  Output saved to: $LOG_FILE"
            
            # Show last few lines of failed log
            if [ -f "$LOG_FILE" ]; then
                log_error "  Last 5 lines of log file:"
                tail -5 "$LOG_FILE" 2>/dev/null | while read line; do
                    log_error "    $line"
                done
            fi
        fi
        
            log "Progress: $current_test/$total_tests tests completed"
            log "Success rate: $successful_tests successful, $failed_tests failed"
            log ""
        done
    done
    
    log "--- Completed benchmarks for algorithm: $ALGORITHM ---"
done

log "=== FINAL SUMMARY ==="
log "Total tests: $total_tests"
log "Successful: $successful_tests"
log "Failed: $failed_tests"
log "Success rate: $(( successful_tests * 100 / total_tests ))%"

if [ $failed_tests -gt 0 ]; then
    log_error "Some tests failed. Check benchmark.log for details."
else
    log "All tests completed successfully!"
fi

log "Results directory contents:"
ls -la $RESULTS_DIR/ | while read line; do
    log "  $line"
done

log "Benchmarking session completed"
log "Full log saved to: benchmark.log"

# Generate performance report
log "=== GENERATING PERFORMANCE REPORT ==="
log "Generating report from results..."

# Generate the performance report using the updated script
if python3 make_report.py $RESULTS_DIR; then
    log "✓ Performance report generated successfully"
    log "  Report available at: $RESULTS_DIR/report.md"
    log "  CSV data at: $RESULTS_DIR/results.csv"
    log "  Visualizations at: $RESULTS_DIR/*.png"
else
    log_error "Failed to generate performance report"
    log_error "You can manually run: python3 make_report.py $RESULTS_DIR"
fi

log "=== BENCHMARKING COMPLETE ==="